name: Main

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  # windows:
  #   runs-on: windows-2022
  #   steps:
  #     # Clone repository
  #     - name: Check out repository
  #       uses: actions/checkout@v4
  #     # Set up caching
  #     - name: Set up Cabal cache
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           C:\cabal\packages
  #           C:\cabal\store
  #           dist-newstyle
  #         key: ${{ github.job }}-cabal-${{ hashFiles('cabal.project') }}-${{ hashFiles('**/*.cabal') }}
  #     - name: Set up Cargo cache
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           ~\.cargo\bin
  #           ~\.cargo\registry\index
  #           ~\.cargo\registry\cache
  #           ~\.cargo\git\db
  #           opensolid-jit\target
  #         key: ${{ github.job }}-cargo-${{ hashFiles('opensolid-jit/Cargo.*') }}
  #     # Install tooling
  #     - name: Install Rust toolchain
  #       run: |
  #         rustup install 1.82.0-x86_64-pc-windows-gnu
  #         rustup default 1.82.0-x86_64-pc-windows-gnu
  #     - name: Update Cabal package index
  #       run: |
  #         cabal update
  #     - name: Install uv
  #       run: |
  #         pipx install uv
  #     # Build and test
  #     - name: Build opensolid-jit library
  #       working-directory: opensolid-jit
  #       run: |
  #         cargo build --release
  #         echo "PATH=$env:PATH;$env:GITHUB_WORKSPACE\opensolid-jit\target\release" >> $env:GITHUB_ENV
  #     - name: Build opensolid library
  #       run: |
  #         cabal build opensolid
  #     - name: Run tests
  #       run: |
  #         cabal run sandbox
  #         cabal test opensolid
  #     - name: Build native library
  #       run: |
  #         cabal run generate-def-file
  #         cabal build opensolid-ffi
  #     - name: Build Python bindings
  #       run: |
  #         Copy-Item -Path .\opensolid-jit\target\release\opensolid_jit.dll -Destination .\opensolid-python\lib\src\opensolid\
  #         Get-ChildItem -Path dist-newstyle -Filter opensolid-ffi.dll -Recurse | Copy-Item -Destination .\opensolid-python\lib\src\opensolid\
  #         cabal run opensolid-python
  #     - name: Run test Python script
  #       working-directory: opensolid-python/lib
  #       run: |
  #         uv run check.py

  linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up Cabal cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/cabal/packages
            ~/.local/state/cabal/store
            dist-newstyle
            opensolid/.hie
          key: ${{ github.job }}-cabal-${{ hashFiles('cabal.project') }}-${{ hashFiles('**/*.cabal') }}
      - name: Set up Cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            opensolid-jit/target
          key: ${{ github.job }}-cargo-${{ hashFiles('opensolid-jit/Cargo.*') }}
      - name: Install Python tooling
        run: |
          pipx install uv==0.5.6
          pipx install ruff==0.7.3
          pipx install auditwheel==6.1.0
      - name: Update Cabal index
        run: |
          cabal update
      - name: Build opensolid-jit library
        working-directory: opensolid-jit
        run: |
          cargo build --release
          echo "LD_LIBRARY_PATH=$GITHUB_WORKSPACE/opensolid-jit/target/release" >> $GITHUB_ENV
      - name: Build opensolid library
        run: |
          cabal build opensolid
      - name: Run tests
        run: |
          cabal run sandbox
          cabal test opensolid
      - name: Build Python bindings
        run: |
          scripts/generate-python-bindings
      - name: Run test Python script
        run: |
          cd opensolid-python/lib
          uv run check.py
      - name: Build and fix wheel
        run: |
          cd opensolid-python/lib
          uv build --wheel
          auditwheel repair --plat manylinux_2_35_x86_64 dist/*.whl
      - name: Save wheel as artifact
        uses: actions/upload-artifact@v4
        with:
          path: opensolid-python/lib/wheelhouse/*.whl

  macos-x86:
    runs-on: macos-13
    env:
      _PYTHON_HOST_PLATFORM: macosx-13.0-x86_64
      ARCHFLAGS: -arch x86_64
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up GHCup cache
        uses: actions/cache@v4
        with:
          path: ~/.ghcup
          key: ${{ github.job }}-ghcup
      - name: Set up Cabal cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/cabal/packages
            ~/.local/state/cabal/store
            dist-newstyle
            opensolid/.hie
          key: ${{ github.job }}-cabal-${{ hashFiles('cabal.project') }}-${{ hashFiles('**/*.cabal') }}
      - name: Set up Cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
            opensolid-jit/target
          key: ${{ github.job }}-cargo-${{ hashFiles('opensolid-jit/Cargo.*') }}
      - name: Install Haskell tooling
        uses: haskell-actions/setup@v2
        with:
          ghc-version: 9.10.1
          cabal-version: 3.12.1.0
      - name: Install Rust tooling
        uses: dtolnay/rust-toolchain@1.82.0
      - name: Install Python tooling
        run: |
          pipx install uv==0.5.6
          pipx install ruff==0.7.3
          pipx install delocate==0.12.0
      - name: Update Cabal index
        run: |
          cabal update
      - name: Build opensolid-jit library
        working-directory: opensolid-jit
        run: |
          cargo build --release
          echo "LD_LIBRARY_PATH=$GITHUB_WORKSPACE/opensolid-jit/target/release" >> $GITHUB_ENV
      - name: Build opensolid library
        run: |
          cabal build -v opensolid
      - name: Run tests
        run: |
          cabal run sandbox
          cabal test opensolid
      - name: Build Python bindings
        run: |
          scripts/generate-python-bindings
      - name: Run test Python script
        run: |
          cd opensolid-python/lib
          uv run check.py
      - name: Build and fix wheel
        run: |
          cd opensolid-python/lib
          uv build --wheel
          delocate-wheel --help
          delocate-wheel -v --require-archs x86_64 -w wheelhouse dist/*.whl
      - name: Save wheel as artifact
        uses: actions/upload-artifact@v4
        with:
          path: opensolid-python/lib/wheelhouse/*.whl
