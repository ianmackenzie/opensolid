Figure out how to list all classes (and exceptions) in the API

Switch Solve2d.return back to taking a single value instead of a NonEmpty

Sandbox executable to start generating Region2d medial axis curves and points?
-> need to be able to solve for medial axis of curve and *point* first

Introduce curve function types and properly support piecewise curves

Switch types back to 'space @ units' instead of 'coordinateSystem' where possible?
-> if that makes coercion more expensive, specialize arithmetic operators instead

Implement 1D monotonic solving in Rust

Specialize xComponent etc. for Parametric cases

Move primitives to Primitives.hs

Use space1 ~ space2 instead of space ~ space_ everywhere

Refactor Estimate to return an error if convergence fails/stalls

Specialize Multiplication for primitive types, for performance
-> avoid units coercion and extra typeclass lookup

Optimizations to try:
- cache expressions on Rust side (per thread?)
- refactor JIT code to directly generate 'primop' style code directly callable from Haskell
- add CMM wrappers around C functions so they can be directly used as primops
