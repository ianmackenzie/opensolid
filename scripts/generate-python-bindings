#!/bin/bash

set -euo pipefail

# Run the Python code generator executable to create __init__.py
cabal run opensolid-python
# Format __init__.py for readability
ruff format opensolid-python/lib/src/opensolid/__init__.py
# Check __init__.py for errors
# Disabled errors:
#   D203: conflicts with D211, have to choose one
#   D213: conflicts with D212, have to choose one
#   COM812: conflicts with 'ruff format'
#   RUF012: attempting to annotate _fields_ gets very messy
#   PLR0911: limitation on number of return statements is silly for generated code
#   SLF001: often need to access private _ptr variable
#   N801: concrete types use underscores in names
#   D105: doesn't seem that useful to document 'magic' methods with docstrings
#   D107: constructors are not meant for public use
ruff check --config "line-length = 100" --select ALL --ignore D203 --ignore D213 --ignore COM812 --ignore RUF012 --ignore PLR0911 --ignore SLF001 --ignore N801 --ignore D105 --ignore D107 opensolid-python/lib/src/opensolid/__init__.py
# Generate the opensolid-ffi.def file with all API functions listed
# (necessary for Windows builds)
cabal run generate-def-file
# Build the native shared library
# (on Windows, this uses the opensolid-ffi.def file generated above)
cabal build opensolid-ffi
# Copy the native shared library to beside __init__.py
# so that it can be loaded properly
cp $(find dist-newstyle -name libopensolid-ffi.so) opensolid-python/lib/src/opensolid
